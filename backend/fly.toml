# ========================================
# Amazon Review Intelligence - Fly.io Configuration
# Backend FastAPI Deployment
# ========================================

# App Configuration
app = "amazon-review-intelligence"  # Change this to your preferred app name
primary_region = "iad"  # Change to your preferred region (iad=US East, lax=US West, lhr=London, etc.)
kill_signal = "SIGINT"
kill_timeout = "5s"

# ========================================
# Build Configuration
# ========================================
[build]
  dockerfile = "Dockerfile"
  ignorefile = ".dockerignore"

# ========================================
# Environment Variables (Non-sensitive)
# ========================================
[env]
  # Application
  APP_NAME = "Amazon Review Intelligence"
  APP_VERSION = "1.0.0"
  ENVIRONMENT = "production"
  DEBUG = "false"
  
  # Server Configuration
  PORT = "8000"
  HOST = "0.0.0.0"
  WORKERS = "2"
  
  # CORS - Update with your frontend URL
  ALLOWED_ORIGINS = "https://your-frontend.vercel.app,https://amazon-review-intelligence.vercel.app"
  
  # AI/NLP Configuration
  USE_MOCK_DATA = "false"
  NLP_ENGINE = "free"  # free = VADER + TextBlob + NLTK
  
  # Rate Limiting
  RATE_LIMIT_ENABLED = "true"
  RATE_LIMIT_PER_MINUTE = "60"
  RATE_LIMIT_PER_HOUR = "1000"
  
  # Logging
  LOG_LEVEL = "INFO"
  
  # Python Environment
  PYTHONUNBUFFERED = "1"
  PYTHONDONTWRITEBYTECODE = "1"

# ========================================
# HTTP Service Configuration
# ========================================
[[services]]
  protocol = "tcp"
  internal_port = 8000
  processes = ["app"]

  # Health Check Configuration
  [[services.ports]]
    port = 80
    handlers = ["http"]
    force_https = true

  [[services.ports]]
    port = 443
    handlers = ["tls", "http"]
  
  [services.concurrency]
    type = "connections"
    hard_limit = 100
    soft_limit = 80

  # HTTP Health Check
  [[services.tcp_checks]]
    interval = "15s"
    timeout = "5s"
    grace_period = "10s"
    restart_limit = 0

  [[services.http_checks]]
    interval = "30s"
    timeout = "5s"
    grace_period = "10s"
    method = "GET"
    path = "/health"
    protocol = "http"
    restart_limit = 0
    tls_skip_verify = false
    [services.http_checks.headers]

# ========================================
# VM Resources Configuration
# ========================================
[vm]
  # Machine type - shared-cpu-1x is free tier
  # For production, consider: shared-cpu-2x or dedicated-cpu-1x
  size = "shared-cpu-1x"  # 256MB RAM, 1 shared CPU (free tier)
  # size = "shared-cpu-2x"  # 512MB RAM, 2 shared CPUs ($3.19/month)
  # size = "dedicated-cpu-1x"  # 2GB RAM, 1 dedicated CPU ($29/month)

# ========================================
# Auto-Scaling Configuration
# ========================================
[[vm]]
  memory = "256mb"  # Minimum for free tier
  cpu_kind = "shared"
  cpus = 1

# Metrics Configuration (for auto-scaling)
[metrics]
  port = 9091  # Prometheus metrics port (optional)
  path = "/metrics"

# ========================================
# Deployment Configuration
# ========================================
[deploy]
  strategy = "rolling"  # Options: rolling, immediate, bluegreen, canary
  wait_timeout = "5m"

# ========================================
# Mount Volumes (Optional - for persistent data)
# ========================================
# Uncomment if you need persistent storage for exports, logs, or database
# [[mounts]]
#   source = "review_data"
#   destination = "/app/data"
#   initial_size = "1gb"

# [[mounts]]
#   source = "review_exports"
#   destination = "/app/exports"
#   initial_size = "1gb"

# ========================================
# Experimental Features
# ========================================
[experimental]
  auto_rollback = true  # Automatically rollback failed deployments

# ========================================
# NOTES FOR DEPLOYMENT
# ========================================
# 
# 1. SECRETS CONFIGURATION (Run these commands before deploying):
#    flyctl secrets set APIFY_API_KEY="your-apify-key"
#    flyctl secrets set OPENAI_API_KEY="your-openai-key" (if using OpenAI)
#    flyctl secrets set SECRET_KEY="your-secret-key"
#    flyctl secrets set JWT_SECRET_KEY="your-jwt-secret"
#
# 2. CREATE APP (First time only):
#    flyctl apps create amazon-review-intelligence
#
# 3. DEPLOY:
#    cd backend
#    flyctl deploy
#
# 4. CHECK LOGS:
#    flyctl logs
#
# 5. OPEN APP:
#    flyctl open
#
# 6. CHECK STATUS:
#    flyctl status
#
# 7. SCALE APP (if needed):
#    flyctl scale count 2  # Run 2 instances
#    flyctl scale memory 512  # Increase memory to 512MB
#
# 8. REGIONS (add more regions for global performance):
#    flyctl regions add lhr  # Add London
#    flyctl regions add nrt  # Add Tokyo
#    flyctl regions list  # See all available regions
#
# 9. MONITORING:
#    flyctl dashboard  # Open web dashboard
#    flyctl metrics  # View metrics
#
# ========================================